version: '3.4'

services:

  
  typesense:
    image: typesense/typesense:0.25.2
    container_name: typesense_prod
    restart: "no"
    ports:
      - "8108:8108" 
    volumes:
    - "../data/typesense_data:/data"
    command: "--data-dir /data --api-key $TYPESENSE_API_KEY --enable-cors"
    environment:
      TYPESENSE_API_KEY: ${TYPESENSE_API_KEY}

  db:
    build: "db/"
    image: db_prod
    container_name: db_prod
    restart: "no"
    ports:
      - "5432:5432"
    volumes:
      - "../data/sqldata:/var/lib/postgresql/data" # persist data
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

#  scraper:
#    build:
#      context: "scraper/"
#      args:
#        - env=prod
#    image: scraper_prod
#    volumes:
#      - "./scraper:/usr/src/app/:ro"
#    depends_on:
#      - typesense
#      - db
#    tty: true
#    stdin_open: true
#    environment:
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#
#  web:
#    build:
#      context: "web/"
#      args:
#        - env=prod
#    image: web_prod
#    container_name: web_prod
#    restart: "no"
#    ports:
#      - "8080:80"
#    depends_on:
#      - typesense
#    volumes:
#      - "./web/content:/usr/local/apache2/htdocs/:ro"
#    environment:
#      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#      SECRET_KEY: ${SECRET_KEY}
#      ENABLE_PAYMENT: ${ENABLE_PAYMENT}
#      SMTP_SERVER: ${SMTP_SERVER}
#      SMTP_PORT: ${SMTP_PORT}
#      SMTP_FROM_EMAIL: ${SMTP_FROM_EMAIL}
#      SMTP_FROM_PASSWORD: ${SMTP_FROM_PASSWORD}
#      SMTP_TO_EMAIL: ${SMTP_TO_EMAIL}
#      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
#      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
#      STRIPE_PRODUCT_ID: ${STRIPE_PRODUCT_ID}
#      STRIPE_ENDPOINT_SECRET: ${STRIPE_ENDPOINT_SECRET}
#
